/* Created by Arup Jyoti Dutta
    Date created : 02-Mar-19
*/


#include<bits/stdc++.h>

#define string_c std::string
#define cout_c std::cout
#define cin_c std::cin

const string_c WHITESPACE = " \n\r\t\f\v";

string_c ltrim(const string_c& s)
{
	size_t start = s.find_first_not_of(WHITESPACE);
	return (start == string_c::npos) ? "" : s.substr(start);
}

string_c rtrim(const string_c& s)
{
	size_t end = s.find_last_not_of(WHITESPACE);
	return (end == string_c::npos) ? "" : s.substr(0, end + 1);
}

string_c trim(const string_c& s)
{
	return rtrim(ltrim(s));
}

int main()
{

    string_c str,delim;
    getline(cin_c,str);
    getline(cin_c,delim);
    size_t prev=0;

    //returns the position of first delimiter
    size_t found = str.find(delim);

    // search delimiters until the end of the string
    while(found != string_c::npos)
    {
    // the substring between two delimiters gets printed out
      cout_c<<trim(str.substr(prev,found-prev))<<"\n";

    // the search for delimiter continues...
       found = str.find(delim,prev=found+1);
    }
    //prints the rest of the string after the last delimiter is encountered
    cout_c<<trim(str.substr(prev));
}
